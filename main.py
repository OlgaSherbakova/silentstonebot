import random
import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
import os

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞ ‚Äî —É–∂–µ –≤–ø–∏—Å–∞–Ω
TOKEN = "8142905270:AAEK9RGFV1DZkrw7j-i3qFnimSKaw5XBIMc"

bot = Bot(token=TOKEN)
dp = Dispatcher(bot)

# –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞–Ω–∏–π
def load_tasks():
    with open("tasks.txt", encoding="utf-8") as f:
        return [line.strip() for line in f if line.strip()]

TASKS = load_tasks()

# –ö–Ω–æ–ø–∫–∞ "–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–ª–µ–¥"
reply_kb = ReplyKeyboardMarkup(resize_keyboard=True)
reply_kb.add(KeyboardButton("üì© –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–ª–µ–¥"))

@dp.message_handler(commands=["start"])
async def welcome(message: types.Message):
    task = random.choice(TASKS)
    text = (
        "–ü—Ä–∏–≤–µ—Ç. –Ø —Ä–∞–¥ —Ç–µ–±—è –≤–∏–¥–µ—Ç—å.\n\n"
        "–ú–Ω–µ –∫–∞–∂–µ—Ç—Å—è, –∫–∞–∂–¥—ã–π —á–µ–ª–æ–≤–µ–∫ ‚Äî —ç—Ç–æ —É–∂–µ –∏—Å–∫—É—Å—Å—Ç–≤–æ.\n\n"
        "–ù–µ –∑–Ω–∞—é, —Å—á–∏—Ç–∞–µ—à—å –ª–∏ —Ç—ã —Å–µ–±—è –∏—Å–∫—É—Å—Å—Ç–≤–æ–º, \n"
        "–Ω–æ –µ—Å–ª–∏ —Ö–æ—á–µ—à—å ‚Äî –Ω–∏–∂–µ –±—É–¥–µ—Ç –∑–∞–¥–∞–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –≤—ã–ø–∞–ª–æ —Å–ª—É—á–∞–π–Ω–æ.\n\n"
        f"üé≤ *–ó–∞–¥–∞–Ω–∏–µ:* {task}\n\n"
        "–ï—Å–ª–∏ —Ö–æ—á–µ—à—å ‚Äî –≤—ã–ø–æ–ª–Ω–∏.\n"
        "–ï—Å–ª–∏ –Ω–µ —Ö–æ—á–µ—à—å ‚Äî –º–æ–∂–µ—à—å –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–≤–æ–π —Å–ª–µ–¥: —Ç–µ–∫—Å—Ç, —Ñ–æ—Ç–æ, –∑–≤—É–∫, –Ω–∏—á–µ–≥–æ.\n\n"
        "–í—Å—ë –æ—Å—Ç–∞–Ω–µ—Ç—Å—è –∞–Ω–æ–Ω–∏–º–Ω—ã–º."
    )
    await message.answer(text, reply_markup=reply_kb, parse_mode="Markdown")

@dp.message_handler(lambda m: m.text == "üì© –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–ª–µ–¥")
async def wait_for_response(message: types.Message):
    await message.answer("–ñ–¥—É —Ç–≤–æ–π —Å–ª–µ–¥. –ú–æ–∂–µ—à—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ, —Ç–µ–∫—Å—Ç –∏–ª–∏ –∑–≤—É–∫.")

@dp.message_handler(content_types=types.ContentType.ANY)
async def receive_trace(message: types.Message):
    await message.answer("–°–ø–∞—Å–∏–±–æ. –°–ª–µ–¥ –ø–æ–ª—É—á–µ–Ω. –í–æ–∑–≤—Ä–∞—â–∞–π—Å—è, –∫–æ–≥–¥–∞ –∑–∞—Ö–æ—á–µ—à—å –Ω–æ–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ üåø")

async def main():
    await dp.start_polling()

if __name__ == "__main__":
    asyncio.run(main())
